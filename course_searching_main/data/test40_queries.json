[
  {
    "query_id": 1,
    "natural_language_query": "Find all courses offered by University of Michigan.",
    "subqueries": null,
    "cypher_query": "MATCH (c:Course)-[:OFFERED_BY]->(o:Organization {name: 'University of Michigan'}) RETURN c.name",
    "subquery_cyphers": null
  },
  {
    "query_id": 2,
    "natural_language_query": "Find all courses that teach Data Analysis.",
    "subqueries": null,
    "cypher_query": "MATCH (c:Course)-[:TEACHES]->(s:Skill {name: 'Data Analysis'}) RETURN c.name",
    "subquery_cyphers": null
  },
  {
    "query_id": 3,
    "natural_language_query": "Find all courses taught by Christopher Brooks.",
    "subqueries": null,
    "cypher_query": "MATCH (c:Course)-[:TAUGHT_BY]->(i:Instructor {name: 'Christopher Brooks'}) RETURN c.name",
    "subquery_cyphers": null
  },
  {
    "query_id": 4,
    "natural_language_query": "Find all courses at the Intermediate level.",
    "subqueries": null,
    "cypher_query": "MATCH (c:Course)-[:HAS_LEVEL]->(l:Level {name: 'Intermediate'}) RETURN c.name",
    "subquery_cyphers": null
  },
  {
    "query_id": 5,
    "natural_language_query": "Find all courses offered by Stanford University.",
    "subqueries": null,
    "cypher_query": "MATCH (c:Course)-[:OFFERED_BY]->(o:Organization {name: 'Stanford University'}) RETURN c.name",
    "subquery_cyphers": null
  },
  {
    "query_id": 6,
    "natural_language_query": "Find all courses that teach Machine Learning.",
    "subqueries": null,
    "cypher_query": "MATCH (c:Course)-[:TEACHES]->(s:Skill {name: 'Machine Learning'}) RETURN c.name",
    "subquery_cyphers": null
  },
  {
    "query_id": 7,
    "natural_language_query": "Find all courses that lecturer is Andrew Ng.",
    "subqueries": null,
    "cypher_query": "MATCH (c:Course)-[:TAUGHT_BY]->(i:Instructor {name: 'Andrew Ng'}) RETURN c.name",
    "subquery_cyphers": null
  },
  {
    "query_id": 8,
    "natural_language_query": "Find all courses at the Beginner level.",
    "subqueries": null,
    "cypher_query": "MATCH (c:Course)-[:HAS_LEVEL]->(l:Level {name: 'Beginner'}) RETURN c.name",
    "subquery_cyphers": null
  },
  {
    "query_id": 9,
    "natural_language_query": "Find all courses offered by Harvard University.",
    "subqueries": null,
    "cypher_query": "MATCH (c:Course)-[:OFFERED_BY]->(o:Organization {name: 'Harvard University'}) RETURN c.name",
    "subquery_cyphers": null
  },
  {
    "query_id": 10,
    "natural_language_query": "Find all courses that teach Python.",
    "subqueries": null,
    "cypher_query": "MATCH (c:Course)-[:TEACHES]->(s:Skill {name: 'Python'}) RETURN c.name",
    "subquery_cyphers": null
  },
  {
    "query_id": 11,
    "natural_language_query": "Find all instructors who teach courses that teach Machine Learning.",
    "subqueries": [
      "Find all courses that teach Machine Learning.",
      "Find all instructors who teach those courses."
    ],
    "cypher_query": "MATCH (i:Instructor)<-[:TAUGHT_BY]-(c:Course)-[:TEACHES]->(s:Skill {name: 'Machine Learning'}) RETURN i.name",
    "subquery_cyphers": [
      "MATCH (c:Course)-[:TEACHES]->(s:Skill {name: 'Machine Learning'}) RETURN c",
      "MATCH (i:Instructor)<-[:TAUGHT_BY]-(c:Course) WHERE c IN [results from subquery 1] RETURN i.name"
    ]
  },
  {
    "query_id": 12,
    "natural_language_query": "Find all organizations that offer courses at the Advanced level.",
    "subqueries": [
      "Find all courses at the Advanced level.",
      "Find all organizations that offer those courses."
    ],
    "cypher_query": "MATCH (o:Organization)<-[:OFFERED_BY]-(c:Course)-[:HAS_LEVEL]->(l:Level {name: 'Advanced'}) RETURN o.name",
    "subquery_cyphers": [
      "MATCH (c:Course)-[:HAS_LEVEL]->(l:Level {name: 'Advanced'}) RETURN c",
      "MATCH (o:Organization)<-[:OFFERED_BY]-(c:Course) WHERE c IN [results from subquery 1] RETURN o.name"
    ]
  },
  {
    "query_id": 13,
    "natural_language_query": "Find all skills taught in courses taught by Christopher Brooks.",
    "subqueries": [
      "Find all courses taught by Christopher Brooks.",
      "Find all skills taught in those courses."
    ],
    "cypher_query": "MATCH (s:Skill)<-[:TEACHES]-(c:Course)-[:TAUGHT_BY]->(i:Instructor {name: 'Christopher Brooks'}) RETURN s.name",
    "subquery_cyphers": [
      "MATCH (c:Course)-[:TAUGHT_BY]->(i:Instructor {name: 'Christopher Brooks'}) RETURN c",
      "MATCH (s:Skill)<-[:TEACHES]-(c:Course) WHERE c IN [results from subquery 1] RETURN s.name"
    ]
  },
  {
    "query_id": 14,
    "natural_language_query": "Find all instructors who teach courses offered by University of Michigan.",
    "subqueries": [
      "Find all courses offered by University of Michigan.",
      "Find all instructors who teach those courses."
    ],
    "cypher_query": "MATCH (i:Instructor)<-[:TAUGHT_BY]-(c:Course)-[:OFFERED_BY]->(o:Organization {name: 'University of Michigan'}) RETURN i.name",
    "subquery_cyphers": [
      "MATCH (c:Course)-[:OFFERED_BY]->(o:Organization {name: 'University of Michigan'}) RETURN c",
      "MATCH (i:Instructor)<-[:TAUGHT_BY]-(c:Course) WHERE c IN [results from subquery 1] RETURN i.name"
    ]
  },
  {
    "query_id": 15,
    "natural_language_query": "Find all organizations that offer courses that teach Python.",
    "subqueries": [
      "Find all courses that teach Python.",
      "Find all organizations that offer those courses."
    ],
    "cypher_query": "MATCH (o:Organization)<-[:OFFERED_BY]-(c:Course)-[:TEACHES]->(s:Skill {name: 'Python'}) RETURN o.name",
    "subquery_cyphers": [
      "MATCH (c:Course)-[:TEACHES]->(s:Skill {name: 'Python'}) RETURN c",
      "MATCH (o:Organization)<-[:OFFERED_BY]-(c:Course) WHERE c IN [results from subquery 1] RETURN o.name"
    ]
  },
  {
    "query_id": 16,
    "natural_language_query": "Find all skills taught in courses offered by organizations that also offer courses taught by Christopher Brooks.",
    "subqueries": [
      "Find all courses taught by Christopher Brooks.",
      "Find all organizations that offer those courses.",
      "Find all courses offered by those organizations.",
      "Find all skills taught in those courses."
    ],
    "cypher_query": "MATCH (s:Skill)<-[:TEACHES]-(c2:Course)-[:OFFERED_BY]->(o:Organization)<-[:OFFERED_BY]-(c1:Course)-[:TAUGHT_BY]->(i:Instructor {name: 'Christopher Brooks'}) RETURN DISTINCT s.name",
    "subquery_cyphers": [
      "MATCH (c1:Course)-[:TAUGHT_BY]->(i:Instructor {name: 'Christopher Brooks'}) RETURN c1",
      "MATCH (o:Organization)<-[:OFFERED_BY]-(c1:Course) WHERE c1 IN [subquery 1] RETURN o",
      "MATCH (c2:Course)-[:OFFERED_BY]->(o:Organization) WHERE o IN [subquery 2] RETURN c2",
      "MATCH (s:Skill)<-[:TEACHES]-(c2:Course) WHERE c2 IN [subquery 3] RETURN s.name"
    ]
  },
  {
    "query_id": 17,
    "natural_language_query": "Find all instructors who teach courses that are offered by organizations that also offer courses at the Beginner level.",
    "subqueries": [
      "Find all courses at the Beginner level.",
      "Find all organizations that offer those courses.",
      "Find all courses offered by those organizations.",
      "Find all instructors who teach those courses."
    ],
    "cypher_query": "MATCH (i:Instructor)<-[:TAUGHT_BY]-(c2:Course)-[:OFFERED_BY]->(o:Organization)<-[:OFFERED_BY]-(c1:Course)-[:HAS_LEVEL]->(l:Level {name: 'Beginner'}) RETURN DISTINCT i.name",
    "subquery_cyphers": [
      "MATCH (c1:Course)-[:HAS_LEVEL]->(l:Level {name: 'Beginner'}) RETURN c1",
      "MATCH (o:Organization)<-[:OFFERED_BY]-(c1:Course) WHERE c1 IN [subquery 1] RETURN o",
      "MATCH (c2:Course)-[:OFFERED_BY]->(o:Organization) WHERE o IN [subquery 2] RETURN c2",
      "MATCH (i:Instructor)<-[:TAUGHT_BY]-(c2:Course) WHERE c2 IN [subquery 3] RETURN i.name"
    ]
  },
  {
    "query_id": 18,
    "natural_language_query": "Find all levels of courses that teach skills also taught in courses offered by University of Michigan.",
    "subqueries": [
      "Find all courses offered by University of Michigan.",
      "Find all skills taught in those courses.",
      "Find all courses that teach those skills.",
      "Find all levels of those courses."
    ],
    "cypher_query": "MATCH (l:Level)<-[:HAS_LEVEL]-(c2:Course)-[:TEACHES]->(s:Skill)<-[:TEACHES]-(c1:Course)-[:OFFERED_BY]->(o:Organization {name: 'University of Michigan'}) RETURN DISTINCT l.name",
    "subquery_cyphers": [
      "MATCH (c1:Course)-[:OFFERED_BY]->(o:Organization {name: 'University of Michigan'}) RETURN c1",
      "MATCH (s:Skill)<-[:TEACHES]-(c1:Course) WHERE c1 IN [subquery 1] RETURN s",
      "MATCH (c2:Course)-[:TEACHES]->(s:Skill) WHERE s IN [subquery 2] RETURN c2",
      "MATCH (l:Level)<-[:HAS_LEVEL]-(c2:Course) WHERE c2 IN [subquery 3] RETURN l.name"
    ]
  },
  {
    "query_id": 19,
    "natural_language_query": "Find all skills taught in courses that are taught by instructors who also teach courses at the Advanced level.",
    "subqueries": [
      "Find all courses at the Advanced level.",
      "Find all instructors who teach those courses.",
      "Find all courses taught by those instructors.",
      "Find all skills taught in those courses."
    ],
    "cypher_query": "MATCH (s:Skill)<-[:TEACHES]-(c2:Course)-[:TAUGHT_BY]->(i:Instructor)<-[:TAUGHT_BY]-(c1:Course)-[:HAS_LEVEL]->(l:Level {name: 'Advanced'}) RETURN DISTINCT s.name",
    "subquery_cyphers": [
      "MATCH (c1:Course)-[:HAS_LEVEL]->(l:Level {name: 'Advanced'}) RETURN c1",
      "MATCH (i:Instructor)<-[:TAUGHT_BY]-(c1:Course) WHERE c1 IN [subquery 1] RETURN i",
      "MATCH (c2:Course)-[:TAUGHT_BY]->(i:Instructor) WHERE i IN [subquery 2] RETURN c2",
      "MATCH (s:Skill)<-[:TEACHES]-(c2:Course) WHERE c2 IN [subquery 3] RETURN s.name"
    ]
  },
  {
    "query_id": 20,
    "natural_language_query": "Find all organizations that offer courses taught by instructors who teach courses that teach Data Analysis.",
    "subqueries": [
      "Find all courses that teach Data Analysis.",
      "Find all instructors who teach those courses.",
      "Find all courses taught by those instructors.",
      "Find all organizations that offer those courses."
    ],
    "cypher_query": "MATCH (o:Organization)<-[:OFFERED_BY]-(c2:Course)-[:TAUGHT_BY]->(i:Instructor)<-[:TAUGHT_BY]-(c1:Course)-[:TEACHES]->(s:Skill {name: 'Data Analysis'}) RETURN DISTINCT o.name",
    "subquery_cyphers": [
      "MATCH (c1:Course)-[:TEACHES]->(s:Skill {name: 'Data Analysis'}) RETURN c1",
      "MATCH (i:Instructor)<-[:TAUGHT_BY]-(c1:Course) WHERE c1 IN [subquery 1] RETURN i",
      "MATCH (c2:Course)-[:TAUGHT_BY]->(i:Instructor) WHERE i IN [subquery 2] RETURN c2",
      "MATCH (o:Organization)<-[:OFFERED_BY]-(c2:Course) WHERE c2 IN [subquery 3] RETURN o.name"
    ]
  },
  {
    "query_id": 21,
    "natural_language_query": "Find the average rating of courses that teach Data Analysis and are offered by University of Michigan.",
    "subqueries": null,
    "cypher_query": "MATCH (c:Course)-[:TEACHES]->(s:Skill {name: 'Data Analysis'}), (c)-[:OFFERED_BY]->(o:Organization {name: 'University of Michigan'}) RETURN AVG(toFloat(c.rating))",
    "subquery_cyphers": null
  },
  {
    "query_id": 22,
    "natural_language_query": "Find the course with the highest rating among those that teach Python and have more than 100 reviews.",
    "subqueries": null,
    "cypher_query": "MATCH (c:Course)-[:TEACHES]->(s:Skill {name: 'Python'}) WHERE toInteger(c.nu_reviews) > 100 RETURN c.name, c.rating ORDER BY toFloat(c.rating) DESC LIMIT 1",
    "subquery_cyphers": null
  },
  {
    "query_id": 23,
    "natural_language_query": "Find the number of courses each organization offers.",
    "subqueries": null,
    "cypher_query": "MATCH (o:Organization)<-[:OFFERED_BY]-(c:Course) RETURN o.name, COUNT(c) AS num_courses ORDER BY num_courses DESC",
    "subquery_cyphers": null
  },
  {
    "query_id": 24,
    "natural_language_query": "Find all courses that teach both Data Analysis and Machine Learning.",
    "subqueries": null,
    "cypher_query": "MATCH (c:Course)-[:TEACHES]->(s1:Skill {name: 'Data Analysis'}), (c)-[:TEACHES]->(s2:Skill {name: 'Machine Learning'}) RETURN c.name",
    "subquery_cyphers": null
  },
  {
    "query_id": 25,
    "natural_language_query": "Find the top 5 courses with the highest rating that teach Data Analysis.",
    "subqueries": null,
    "cypher_query": "MATCH (c:Course)-[:TEACHES]->(s:Skill {name: 'Data Analysis'}) RETURN c.name, c.rating ORDER BY toFloat(c.rating) DESC LIMIT 5",
    "subquery_cyphers": null
  },
  {
    "query_id": 26,
    "natural_language_query": "Find all courses with rating above 4.5.",
    "subqueries": null,
    "cypher_query": "MATCH (c:Course) WHERE toFloat(c.rating) > 4.5 RETURN c.name",
    "subquery_cyphers": null
  },
  {
    "query_id": 27,
    "natural_language_query": "Find all courses with duration less than 10 hours.",
    "subqueries": null,
    "cypher_query": "MATCH (c:Course) WHERE c.duration < 10 RETURN c.name",
    "subquery_cyphers": null
  },
  {
    "query_id": 28,
    "natural_language_query": "Find all courses that have more than 50 reviews.",
    "subqueries": null,
    "cypher_query": "MATCH (c:Course) WHERE toInteger(c.nu_reviews) > 50 RETURN c.name",
    "subquery_cyphers": null
  },
  {
    "query_id": 29,
    "natural_language_query": "Find the organization that offers the most courses.",
    "subqueries": null,
    "cypher_query": "MATCH (o:Organization)<-[:OFFERED_BY]-(c:Course) RETURN o.name, COUNT(c) AS num_courses ORDER BY num_courses DESC LIMIT 1",
    "subquery_cyphers": null
  },
  {
    "query_id": 30,
    "natural_language_query": "Find the average duration of courses that teach Python.",
    "subqueries": null,
    "cypher_query": "MATCH (c:Course)-[:TEACHES]->(s:Skill {name: 'Python'}) RETURN AVG(c.duration)",
    "subquery_cyphers": null
  },
  {
    "query_id": 31,
    "natural_language_query": "Find all courses offered by University of Michigan that teach Data Analysis.",
    "subqueries": null,
    "cypher_query": "MATCH (c:Course)-[:OFFERED_BY]->(o:Organization {name: 'University of Michigan'}), (c)-[:TEACHES]->(s:Skill {name: 'Data Analysis'}) RETURN c.name",
    "subquery_cyphers": null
  },
  {
    "query_id": 32,
    "natural_language_query": "Find all courses taught by Christopher Brooks at the Intermediate level.",
    "subqueries": null,
    "cypher_query": "MATCH (c:Course)-[:TAUGHT_BY]->(i:Instructor {name: 'Christopher Brooks'}), (c)-[:HAS_LEVEL]->(l:Level {name: 'Intermediate'}) RETURN c.name",
    "subquery_cyphers": null
  },
  {
    "query_id": 33,
    "natural_language_query": "Find all courses that teach Statistics and have a rating above 4.0.",
    "subqueries": null,
    "cypher_query": "MATCH (c:Course)-[:TEACHES]->(s:Skill {name: 'Statistics'}) WHERE toFloat(c.rating) > 4.0 RETURN c.name",
    "subquery_cyphers": null
  },
  {
    "query_id": 34,
    "natural_language_query": "Find all courses offered by Stanford University with more than 20 reviews.",
    "subqueries": null,
    "cypher_query": "MATCH (c:Course)-[:OFFERED_BY]->(o:Organization {name: 'Stanford University'}) WHERE toInteger(c.nu_reviews] > 20 RETURN c.name",
    "subquery_cyphers": null
  },
  {
    "query_id": 35,
    "natural_language_query": "Find all courses that teach Python and are at the Beginner level.",
    "subqueries": null,
    "cypher_query": "MATCH (c:Course)-[:TEACHES]->(s:Skill {name: 'Python'}), (c)-[:HAS_LEVEL]->(l:Level {name: 'Beginner'}) RETURN c.name",
    "subquery_cyphers": null
  },
  {
    "query_id": 36,
    "natural_language_query": "Find all instructors who teach courses offered by Harvard University.",
    "subqueries": [
      "Find all courses offered by Harvard University.",
      "Find all instructors who teach those courses."
    ],
    "cypher_query": "MATCH (i:Instructor)<-[:TAUGHT_BY]-(c:Course)-[:OFFERED_BY]->(o:Organization {name: 'Harvard University'}) RETURN i.name",
    "subquery_cyphers": [
      "MATCH (c:Course)-[:OFFERED_BY]->(o:Organization {name: 'Harvard University'}) RETURN c",
      "MATCH (i:Instructor)<-[:TAUGHT_BY]-(c:Course) WHERE c IN [results from subquery 1] RETURN i.name"
    ]
  },
  {
    "query_id": 37,
    "natural_language_query": "Find all skills taught in courses at the Advanced level.",
    "subqueries": [
      "Find all courses at the Advanced level.",
      "Find all skills taught in those courses."
    ],
    "cypher_query": "MATCH (s:Skill)<-[:TEACHES]-(c:Course)-[:HAS_LEVEL]->(l:Level {name: 'Advanced'}) RETURN s.name",
    "subquery_cyphers": [
      "MATCH (c:Course)-[:HAS_LEVEL]->(l:Level {name: 'Advanced'}) RETURN c",
      "MATCH (s:Skill)<-[:TEACHES]-(c:Course) WHERE c IN [results from subquery 1] RETURN s.name"
    ]
  },
  {
    "query_id": 38,
    "natural_language_query": "Find all organizations that offer courses taught by Andrew Ng.",
    "subqueries": [
      "Find all courses taught by Andrew Ng.",
      "Find all organizations that offer those courses."
    ],
    "cypher_query": "MATCH (o:Organization)<-[:OFFERED_BY]-(c:Course)-[:TAUGHT_BY]->(i:Instructor {name: 'Andrew Ng'}) RETURN o.name",
    "subquery_cyphers": [
      "MATCH (c:Course)-[:TAUGHT_BY]->(i:Instructor {name: 'Andrew Ng'}) RETURN c",
      "MATCH (o:Organization)<-[:OFFERED_BY]-(c:Course) WHERE c IN [results from subquery 1] RETURN o.name"
    ]
  },
  {
    "query_id": 39,
    "natural_language_query": "Find all instructors who teach courses that teach Statistics.",
    "subqueries": [
      "Find all courses that teach Statistics.",
      "Find all instructors who teach those courses."
    ],
    "cypher_query": "MATCH (i:Instructor)<-[:TAUGHT_BY]-(c:Course)-[:TEACHES]->(s:Skill {name: 'Statistics'}) RETURN i.name",
    "subquery_cyphers": [
        "MATCH (c:Course)-[:TEACHES]->(s:Skill {name: 'Statistics'}) RETURN c",
        "MATCH (i:Instructor)<-[:TAUGHT_BY]-(c:Course) RETURN DISTINCT i.name"
        ]
  },
  {
    "query_id": 40,
    "natural_language_query": "Find all courses with duration longer than 10 hours and rating at least 4.5.",
    "subqueries": [
      "Find all courses with duration > 10 hours",
      "From those, filter courses with rating >= 4.5"
    ],
    "cypher_query": "MATCH (c:Course) WHERE toInteger(c.duration) > 10 AND toFloat(c.rating) >= 4.5 RETURN c.name",
    "subquery_cyphers": [
      "MATCH (c:Course) WHERE toInteger(c.duration) > 10 RETURN collect(c.url) AS long_courses",
      "UNWIND $long_courses AS url MATCH (c:Course {url: url}) WHERE toFloat(c.rating) >= 4.5 RETURN c.name AS course_name"
    ]
  },
  {
    "query_id": 41,
    "natural_language_query": "Find all Beginner level courses with duration under 5 hours and rating above 4.0.",
    "subqueries": [
      "Find all Beginner level courses.",
      "Filter those courses to duration < 5 hours and rating > 4.0."
    ],
    "cypher_query": "MATCH (c:Course)-[:HAS_LEVEL]->(l:Level {name: 'Beginner'}) WHERE toInteger(c.duration) < 5 AND toFloat(c.rating) > 4.0 RETURN c.name",
    "subquery_cyphers": [
      "MATCH (c:Course)-[:HAS_LEVEL]->(l:Level {name: 'Beginner'}) RETURN c",
      "MATCH (c:Course) WHERE toInteger(c.duration) < 5 AND toFloat(c.rating) > 4.0 RETURN c"
    ]
  },
  {
    "query_id": 42,
    "natural_language_query": "Find all courses about Python at Intermediate level with rating above 4.2 and duration between 1 and 15 hours.",
    "subqueries": [
      "Locate all Python courses at Intermediate level",
      "Filter those courses by rating > 4.2 and duration between 1 and 15 hours"
    ],
    "cypher_query": "MATCH (c:Course)-[:TEACHES]->(s:Skill {name: 'Python'})-[:HAS_LEVEL]->(l:Level {name: 'Intermediate'}) WHERE toFloat(c.rating) > 4.2 AND toInteger(c.duration) >= 1 AND toInteger(c.duration) <= 15 RETURN c.name",
    "subquery_cyphers": [
      "MATCH (c:Course)-[:TEACHES]->(s:Skill {name: 'Python'})-[:HAS_LEVEL]->(l:Level {name: 'Intermediate'}) RETURN collect(c.url) AS course_urls",
      "UNWIND $course_urls AS url MATCH (c:Course {url: url}) WHERE toFloat(c.rating) > 4.2 AND toInteger(c.duration) >= 1 AND toInteger(c.duration) <= 15 RETURN c.name AS course_name"
    ]
  },
  {
    "query_id": 43,
    "natural_language_query": "Find all courses with rating above 4.8 and duration longer than the average duration of all courses.",
    "subqueries": [
      "Compute the average duration of all courses.",
      "Find all courses with duration > that average and rating > 4.8."
    ],
    "cypher_query": "MATCH (c:Course)-[:TEACHES]->() WITH avg(toInteger(c.duration)) AS avgDur MATCH (c:Course) WHERE toInteger(c.duration) > avgDur AND toFloat(c.rating) > 4.8 RETURN c.name",
    "subquery_cyphers": [
      "MATCH (c:Course) RETURN avg(toInteger(c.duration)) AS avg_duration",
      "MATCH (c:Course) WHERE toInteger(c.duration) > $avg_duration AND toFloat(c.rating) > 4.8 RETURN c"
    ]
  },
  {
    "query_id": 44,
    "natural_language_query": "Find all Beginner level courses teaching Python with rating above 4.0.",
    "subqueries": [
      "Locate all Beginner level courses teaching Python",
      "Filter those courses by rating > 4.0"
    ],
    "cypher_query": "MATCH (c:Course)-[:TEACHES]->(s:Skill {name: 'Python'})-[:HAS_LEVEL]->(l:Level {name: 'Beginner'}) WHERE toFloat(c.rating) > 4.0 RETURN DISTINCT c.name",
    "subquery_cyphers": [
      "MATCH (c:Course)-[:TEACHES]->(s:Skill {name: 'Python'})-[:HAS_LEVEL]->(l:Level {name: 'Beginner'}) RETURN collect(c.url) AS course_urls",
      "UNWIND $course_urls AS url MATCH (c:Course {url: url}) WHERE toFloat(c.rating) > 4.0 RETURN DISTINCT c.name AS course_name"
    ]
  },
  {
    "query_id": 45,
    "natural_language_query": "Find all Advanced level courses offered by Coursera with duration under 20 hours.",
    "subqueries": [
      "Locate all Advanced level courses offered by Coursera",
      "Filter those courses by duration < 20 hours"
    ],
    "cypher_query": "MATCH (c:Course)-[:OFFERED_BY]->(o:Organization {name: 'Coursera'})-[:HAS_LEVEL]->(l:Level {name: 'Advanced'}) WHERE toInteger(c.duration) < 20 RETURN DISTINCT c.name",
    "subquery_cyphers": [
      "MATCH (c:Course)-[:OFFERED_BY]->(o:Organization {name: 'Coursera'})-[:HAS_LEVEL]->(l:Level {name: 'Advanced'}) RETURN collect(c.url) AS course_urls",
      "UNWIND $course_urls AS url MATCH (c:Course {url: url}) WHERE toInteger(c.duration) < 20 RETURN DISTINCT c.name AS course_name"
    ]
  },
  {
    "query_id": 46,
    "natural_language_query": "Find all courses taught by Montse Gorchs Molist with rating at least 4.5.",
    "subqueries": [
      "Locate all courses taught by Montse Gorchs Molist",
      "Filter those courses by rating >= 4.5"
    ],
    "cypher_query": "MATCH (c:Course)-[:TAUGHT_BY]->(i:Instructor {name: 'Montse Gorchs Molist'}) WHERE toFloat(c.rating) >= 4.5 RETURN DISTINCT c.name",
    "subquery_cyphers": [
      "MATCH (c:Course)-[:TAUGHT_BY]->(i:Instructor {name: 'Montse Gorchs Molist'}) RETURN collect(c.url) AS course_urls",
      "UNWIND $course_urls AS url MATCH (c:Course {url: url}) WHERE toFloat(c.rating) >= 4.5 RETURN DISTINCT c.name AS course_name"
    ]
  },
  {
    "query_id": 47,
    "natural_language_query": "Find all middle level courses required by the Data Science career.",
    "subqueries": [
      "Locate the Data Science skill",
      "Locate all Intermediate level courses teaching that skill"
    ],
    "cypher_query": "MATCH (c:Course)-[:TEACHES]->(s:Skill {name: 'Data Science'})\nMATCH (c)-[:HAS_LEVEL]->(l:Level {name: 'Intermediate'})\nRETURN DISTINCT c.name",
    "subquery_cyphers": [
      "MATCH (s:Skill {name: 'Data Science'}) RETURN s.name AS skill_name",
      "MATCH (c:Course)-[:TEACHES]->(:Skill {name: $skill_name})\nMATCH (c)-[:HAS_LEVEL]->(:Level {name: 'Intermediate'})\nRETURN DISTINCT c.name AS course_name"
    ]
  },
  {
    "query_id": 48,
    "natural_language_query": "Find all courses teaching both Python and SQL.",
    "subqueries": [
      "Find all courses teaching Python",
      "From those, filter to courses also teaching SQL"
    ],
    "cypher_query": "MATCH (c:Course)-[:TEACHES]->(:Skill {name: 'Python'}), (c)-[:TEACHES]->(:Skill {name: 'SQL'}) RETURN DISTINCT c.name",
    "subquery_cyphers": [
      "MATCH (c:Course)-[:TEACHES]->(:Skill {name: 'Python'}) RETURN collect(c.url) AS python_courses",
      "UNWIND $python_courses AS url MATCH (c:Course {url: url})-[:TEACHES]->(:Skill {name: 'SQL'}) RETURN DISTINCT c.name AS course_name"
    ]
  },
  {
    "query_id": 49,
    "natural_language_query": "Find all courses with duration between 5 and 15 hours and rating above 4.3.",
    "subqueries": [
      "Locate all courses with duration between 5 and 15 hours",
      "Filter those courses by rating > 4.3"
    ],
    "cypher_query": "MATCH (c:Course) WHERE toInteger(c.duration) >= 5 AND toInteger(c.duration) <= 15 AND toFloat(c.rating) > 4.3 RETURN DISTINCT c.name",
    "subquery_cyphers": [
      "MATCH (c:Course) WHERE toInteger(c.duration) >= 5 AND toInteger(c.duration) <= 15 RETURN collect(c.url) AS duration_courses",
      "UNWIND $duration_courses AS url MATCH (c:Course {url: url}) WHERE toFloat(c.rating) > 4.3 RETURN DISTINCT c.name AS course_name"
    ]
  },
  {
    "query_id": 50,
    "natural_language_query": "Find all courses with 'Data' in the title and rating above 4.2.",
    "subqueries": [
      "Find all courses whose name contains 'Data'",
      "Filter those courses by rating > 4.2"
    ],
    "cypher_query": "MATCH (c:Course) WHERE c.name CONTAINS 'Data' AND toFloat(c.rating) > 4.2 RETURN DISTINCT c.name",
    "subquery_cyphers": [
      "MATCH (c:Course) WHERE c.name CONTAINS 'Data' RETURN collect(c.url) AS data_courses",
      "UNWIND $data_courses AS url MATCH (c:Course {url: url}) WHERE toFloat(c.rating) > 4.2 RETURN DISTINCT c.name AS course_name"
    ]
  }
]